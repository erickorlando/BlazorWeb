@inject SweetAlertService Swal

@if (Lista is not null)
{
    <table class="table table-primary table-bordered table-striped table-hover">
        <thead>
        <tr>
            <th>Nombre</th>
            <th>Acciones</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in Lista)
        {
            <tr>
                <td>@item.Texto</td>
                <td>
                    <button class="btn btn-primary" @onclick="() => OnEditClick.InvokeAsync(item.Id)"><i class="fa fa-edit"></i></button>
                    <button class="btn btn-danger" @onclick="() => Delete(item.Id)"><i class="fa fa-trash"></i></button>
                </td>
            </tr>
        }
        </tbody>
    </table>
}
else
{
    <p>No hay datos para mostrar</p>
}

@code {
    
    [EditorRequired]
    [Parameter]
    public ICollection<UnidadMedidaDto>? Lista { get; set; }

    [Parameter]
    public EventCallback<int> OnEditClick { get; set; }

    [Parameter]
    public EventCallback<int> OnDeleteClick { get; set; }

    public async Task Delete(int id)
    {
        var result = await Swal.FireAsync(new SweetAlertOptions
            {
                Text = "Desea eliminar el registro?",
                Title = "Eliminar",
                Icon = SweetAlertIcon.Warning,
                ShowCancelButton = true,
                ConfirmButtonText = "Si",
                CancelButtonText = "No"
            });

        if (result.IsConfirmed)
        {
            await OnDeleteClick.InvokeAsync(id);
        }
    }
}